import React from "react";
import {
  CloseOutlined,
  InfoOutlined,
  CheckOutlined,
  QuestionCircleOutlined,
  CheckCircleOutlined,
  EditOutlined,
  BookOutlined,
} from "@ant-design/icons";
import { FormattedMessage } from "react-intl";

const Statuses = {
  Applications: [
    {
      status: "New",
      color: "#3ea4d4",
      text: <FormattedMessage id="application.new" />,
      type: "info",
      message: "application.status.new",
    },
    {
      status: "blockChanges",
      color: "#f39834",
      text: <FormattedMessage id="application.blockChanges" />,
      type: "warning",
      message: "application.status.blockChanges",
      icon: <QuestionCircleOutlined />,
    },
    {
      status: "Complete",
      color: "#3ea4d4",
      text: <FormattedMessage id="application.complete" />,
      type: "info",
      message: "application.status.complete",
      icon: <InfoOutlined />,
    },
    {
      status: "ReadyForReview",
      color: "#3ea4d4",
      text: <FormattedMessage id="application.readyForReview" />,
      type: "info",
      message: "application.status.readyForReview",
      icon: <InfoOutlined />,
    },
    {
      status: "ReadyForScoring",
      color: "#f39834",
      text: <FormattedMessage id="application.readyForScoring" />,
      type: "warning",
      message: "application.status.readyForScoring",
      icon: <InfoOutlined />,
    },
    {
      status: "Scored",
      color: "#f39834",
      text: <FormattedMessage id="application.scored" />,
      type: "warning",
      message: "application.status.scored",
      icon: <CheckCircleOutlined />,
    },
    {
      status: "PendingFicheChange",
      color: "#f39834",
      text: <FormattedMessage id="application.pendingFicheChanges" />,
      type: "warning",
      message: "application.status.pendingFicheChange",
      icon: <EditOutlined />,
    },
    {
      status: "ReadyForBoard",
      color: "#f39834",
      text: <FormattedMessage id="application.readyForBoard" />,
      type: "warning",
      message: "application.status.readyForBoard",
      icon: <BookOutlined />,
    },
    {
      status: "PendingBoardDecision",
      color: "#f39834",
      text: <FormattedMessage id="application.pendingBoardDecision" />,
      type: "warning",
      message: "application.status.pendingBoardDecision",
      icon: <QuestionCircleOutlined />,
    },
    {
      status: "Incomplete",
      color: "#f39834",
      text: <FormattedMessage id="application.incomplete" />,
      type: "warning",
      message: "application.status.incomplete",
      icon: <QuestionCircleOutlined />,
    },
    {
      status: "Approved",
      color: "#28a745",
      text: <FormattedMessage id="application.approved" />,
      type: "success",
      message: "application.status.approved",
      icon: <CheckOutlined />,
    },
    {
      status: "ApprovedWithAdjustment",
      color: "#28a745",
      text: <FormattedMessage id="application.approvedForAdjustment" />,
      type: "warning",
      message: "application.status.approvedWithAdjustment",
      icon: <CheckOutlined />,
    },
    {
      status: "Signed",
      color: "#28a745",
      text: <FormattedMessage id="filter.signed" />,
      type: "success",
      message: "application.status.signed",
      icon: <CheckOutlined />,
    },
    {
      status: "rejected",
      color: "#3ea4d4",
      text: <FormattedMessage id="application.rejected" />,
      type: "error",
      message: "application.status.rejected",
      icon: <CloseOutlined />,
    },
    {
      status: "RejectedAdjustment",
      color: "#3ea4d4",
      text: "Rejected Adjustment",
      type: "error",
      message: "application.status.rejectedAdjustment",
      icon: <CloseOutlined />,
    },
  ],
};

export default Statuses;
